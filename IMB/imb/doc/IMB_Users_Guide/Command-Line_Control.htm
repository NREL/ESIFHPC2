
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<!-- saved from url=(0014)about:internet -->
<html>
<head>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
 <meta name="generator" content="Adobe RoboHelp 10">
<title>Command-Line Control</title>
<link rel="StyleSheet" href="intel_css_styles.css" type="text/css">
<style title="hcp" type="text/css">
<!--
ul.hcp1 { list-style:disc; }
-->
</style>
</head>

<script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
<body>
<script type="text/javascript" src="ehlpdhtm.js" language="JavaScript1.2"></script>

<div style="width: 100%; position: relative;" id="header">
	
 <p style="font-style: italic;">Intel® 
	 MPI Benchmarks User Guide and Methodology Description</p>
</div>


<h1>Command-line Control</h1>
<p>You can control all the aspects of the Intel® MPI Benchmarks through 
 the command-line. The general command-line syntax is the following:</p>
<pre>
IMB-MPI1&#160;&#160;&#160;&#160;[-h{elp}]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-npmin&#160;&#160;&#160;&#160;&#160;&lt;P_min&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-multi&#160;&#160;&#160;&#160;&#160;&lt;outflag&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-off_cache&#160;&lt;cache_size[,cache_line_size]&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-iter &#160;&#160;&#160;&#160;&#160;&lt;msgspersample[,overall_vol[,msgs_nonaggr[,iter_policy]]]&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-iter_policy&#160;&#160;&#160;&#160;&#160;&lt;iter_policy&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-time&#160;&#160;&#160;&#160;&#160;&lt;max_runtime&#160;per&#160;sample&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-mem&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;max.&#160;mem&#160;usage&#160;per&#160;process&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-msglen&#160;&#160;&#160;&#160;&lt;Lengths_file&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-map&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;PxQ&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-input&#160;&#160;&#160;&#160;&#160;&lt;filename&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-include]&#160;&#160;[benchmark1&#160;[,benchmark2&#160;[,...]]]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-exclude]&#160;&#160;[benchmark1&#160;[,benchmark2&#160;[,...]]]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-msglog&#160;[&lt;minlog&gt;:]&lt;maxlog&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-thread_level &lt;level&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-sync &lt;mode&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[-root_shift &lt;mode&gt;]
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[benchmark1&#160;[,benchmark2&#160;[,...]]]</pre>
<p>The command line is repeated in the output. The options may appear in 
 any order.</p>
<p><b>Examples:</b></p>
<p>Get out-of-cache data for <samp class="codeph">PingPong</samp>:</p>
<pre>
mpirun -np 2 &#160;IMB-MPI1 PingPong -off_cache -1</pre>
<p>Run a very large configuration, with the following restrictions:</p>
<ul class="hcp1">
	<li>Maximum iterations: 20</li>
	<li>Maximum run time per message: 1.5 seconds</li>
	<li>Maximum message buffer size: 2 GBytes</li>
</ul>
<pre>
mpirun -np 512 IMB-MPI1 -npmin 512 alltoallv&#160;-iter&#160;20&#160;-time&#160;1.5&#160;-mem&#160;2</pre>
<p>Run the <samp class="codeph">P_Read_shared</samp> benchmark with the 
 minimum number of processes set to seven:</p>
<pre>
mpirun -np 14 IMB-IO P_Read_shared -npmin&#160;7</pre>
<p>Run the <samp class="codeph">IMB-MPI1</samp> benchmarks including <samp 
	 class="codeph">PingPongSpecificSource</samp> and <samp class="codeph">PingPingSpecificSource</samp>, 
 but excluding the <samp class="codeph">Alltoall</samp> and <samp class="codeph">Alltoallv</samp> 
 benchmarks. Set the transfer message sizes as <samp class="codeph">0, 
 4, 8, 16, 32, 64, 128</samp>:</p>
<pre>
mpirun -np 16 IMB-MPI1 -msglog 2:7 -include PingPongSpecificsource PingPingSpecificsource -exclude Alltoall Alltoallv</pre>
<p>Run the <samp class="codeph">PingPong</samp>, <samp class="codeph">PingPing</samp>, 
 <samp class="codeph">PingPongSpecificSource</samp> and <samp class="codeph">PingPingSpecificSource</samp> 
 benchmarks with the transfer message sizes <samp class="codeph">0, 2^0, 
 2^1, 2^2, ..., 2^16</samp>:</p>
<pre>
mpirun -np 4 IMB-MPI1 -msglog 16 PingPong PingPing PingPongSpecificSource&#160;PingPingSpecificSource</pre>
<h2>Benchmark Selection Arguments</h2>
<p>Benchmark selection arguments are a sequence of blank-separated strings. 
 Each string is the name of a benchmark in exact spelling, case insensitive.</p>
<p>For example, the string <samp class="codeph">IMB-MPI1&#160;PingPong&#160;Allreduce</samp> 
 specifies that you want to run <samp class="codeph">PingPong</samp> and 
 <samp class="codeph">Allreduce</samp> benchmarks only:</p>
<pre>
mpirun -np 10 IMB-MPI1 PingPong Allreduce</pre>
<p>By default, all benchmarks of the selected component are run.</p>
<h2>-npmin Option</h2>
<p>Specifies the minimum number of processes <samp class="codeph">P_min</samp> 
 to run all selected benchmarks on. The <samp class="codeph">P_min</samp> 
 value after <samp class="codeph">-npmin</samp> must be an integer.</p>
<p>Given <samp class="codeph">P_min</samp>, the benchmarks run on the processes 
 with the numbers selected as follows:</p>
<p><samp class="codeph">P_min,&#160;2P_min,&#160;4P_min,&#160;...,&#160;</samp>largest 
 <samp class="codeph">2<sup>x</sup>P_min&#160;&lt;P,&#160;P</samp></p>
<div class="Note">
	<h3 class="NoteTipHead">Note</h3>
	<p>You may set <samp class="codeph">P_min</samp> to 1. If you set <samp 
	 class="codeph">P_min&#160;&gt;&#160;P</samp>, Intel MPI Benchmarks 
	 interprets this value as&#160;<samp class="codeph">P_min&#160;=&#160;P.</samp></p>
</div>
<p>For example, to run the <samp class="codeph">IMB-EXT</samp> benchmarks 
 with minimum number of processes set to five, call:</p>
<pre>
mpirun -np 11 IMB-EXT&#160;-npmin 5</pre>
<p>By default, all active processes are selected as described in the <a 
	 href="Running.htm">Running Intel® MPI Benchmarks</a> section.</p>
<h2>-multi Option</h2>
<p>Defines whether the benchmark runs in multiple mode. In this mode <samp 
	 class="codeph">MPI_COMM_WORLD</samp> is split into several groups, 
 which run simultaneously. The argument after <samp class="codeph">-multi</samp> 
 is a meta-symbol <samp class="codeph">&lt;outflag&gt;</samp> that can 
 take an integer value of 0 or 1:</p>
<ul class="hcp1">
	<li><p><samp class="codeph">Outflag&#160;=&#160;0</samp> display only 
	 maximum timings (minimum throughputs) over all active groups</p></li>
	<li><p><samp class="codeph">Outflag&#160;=&#160;1</samp> report on 
	 all groups separately. The report may be long in this case.</p></li>
</ul>
<p>When the number of processes running the benchmark is more than half 
 of the overall number <samp class="codeph">MPI_COMM_WORLD</samp>, the 
 multiple benchmark coincides with the non-multiple one, as not more than 
 one process group can be created.</p>
<p>For example, if you run this command:</p>
<pre>
mpirun -np 16 IMB-MPI1 -multi 0 bcast -npmin 12</pre>
<p>The benchmark will run in non-multiple mode, as the benchmarking starts 
 from 12 processes, which is more than half of <samp class="codeph">MPI_COMM_WORLD</samp>.</p>
<p>By default, Intel® MPI Benchmarks run non-multiple benchmark flavors.</p>
<h2>-off_cache cache_size[,cache_line_size] Option</h2>
<p>Use the <samp class="codeph">-off_cache</samp> flag to avoid cache re-use. 
 If you do not use this flag (default), the same communications buffer 
 is used for all repetitions of one message size sample. In this case, 
 Intel® MPI Benchmarks reuses the cache, so throughput results might be 
 non-realistic.</p>
<p>The argument after <samp class="codeph">off_cache</samp> can be a single 
 number<samp class="codeph"> (cache_size)</samp>, two comma-separated numbers 
 <samp class="codeph">(cache_size,cache_line_size)</samp>, or <samp class="codeph">-1</samp>:</p>
<ul class="hcp1">
	<li><p><samp class="codeph">cache_size</samp> is a float for an upper 
	 bound of the size of the last level cache, in MB.</p></li>
	<li><p><samp class="codeph">cache_line_size</samp> is assumed to be 
	 the size of a last level cache line (can be an upper estimate).</p></li>
	<li><p><samp class="codeph">-1</samp> uses values defined in <samp 
	 class="codeph">IMB_mem_info.h</samp>. In this case, make sure to define 
	 values for <samp class="codeph">cache_size</samp> and <samp class="codeph">cache_line_size</samp> 
	 in <samp class="codeph">IMB_mem_info.h.</samp></p></li>
</ul>
<p>The sent/received data is stored in buffers of size ~2x MAX<samp class="codeph">(cache_size, 
 message_size)</samp>. When repetitively using messages of a particular 
 size, their addresses are advanced within those buffers so that a single 
 message is at least 2 cache lines after the end of the previous message. 
 When these buffers are filled up, they are reused from the beginning.</p>
<p><samp class="codeph">-off_cache</samp> is effective for IMB-MPI1 and 
 IMB-EXT. Avoid using this option for IMB-IO.</p>
<p><b>Examples:</b></p>
<p>Use the default values defined in <samp class="codeph">IMB_mem_info.h</samp>:</p>
<p><samp class="codeph">-off_cache -1</samp></p>
<p>2.5 MB last level cache, default line size:</p>
<p><samp class="codeph">-off_cache 2.5</samp></p>
<p>16 MB last level cache, line size 128:</p>
<p><samp class="codeph">-off_cache 16,128</samp></p>
<p>The <samp class="codeph">off_cache</samp> mode might also be influenced 
 by eventual internal caching with the Intel® MPI Library. This could make 
 results interpretation complicated.</p>
<p>Default: no cache control.</p>
<h2>-iter Option</h2>
<p>Use this option to control the number of iterations executed by every 
 benchmark. </p>
<p>By default, the number of iterations is controlled through parameters 
 <samp class="codeph">MSGSPERSAMPLE</samp>, <samp class="codeph">OVERALL_VOL</samp>, 
 <samp class="codeph">MSGS_NONAGGR</samp>, and <samp class="codeph">ITER_POLICY</samp> 
 defined in <samp class="codeph">IMB_settings.h</samp>.</p>
<p>You can optionally add one or more arguments after the <samp class="codeph">-iter</samp> 
 flag, to override the default values defined in <samp class="codeph">IMB_settings.h</samp>. 
 Use the following guidelines for the optional arguments:</p>
<ul class="hcp1">
	<li>To override the <samp class="codeph">MSGSPERSAMPLE</samp> value, 
	 use a single integer.</li>
	<li>To override the <samp class="codeph">OVERALL_VOL</samp> value, 
	 use two comma-separated integers. The first integer defines the <samp 
	 class="codeph">MSGSPERSAMPLE</samp> value. The second integer overrides 
	 the <samp class="codeph">OVERALL_VOL</samp>&#160;value.</li>
	<li>To override the <samp class="codeph">MSGS_NONAGGR</samp>&#160;value, 
	 use three comma-separated integer numbers. The first integer defines 
	 the <samp class="codeph">MSGSPERSAMPLE</samp> value. The second integer 
	 overrides the <samp class="codeph">OVERALL_VOL</samp>&#160;value. 
	 The third overrides the <samp class="codeph">MSGS_NONAGGR</samp>&#160;value.</li>
	<li>To override the <samp class="codeph">-iter_policy</samp> argument, 
	 enter it after the integer arguments, or right after the <samp class="codeph">-iter</samp> 
	 flag if you do not use any other arguments.</li>
</ul>
<p><b>Examples:</b></p>
<p>To define <samp class="codeph">MSGSPERSAMPLE</samp> as 2000, and <samp 
	 class="codeph">OVERALL_VOL </samp>as 100, use the following string:</p>
<p><samp class="codeph">-iter 2000,100</samp></p>
<p>To define <samp class="codeph">MSGS_NONAGGR</samp> as 150, you need 
 to define values for <samp class="codeph">MSGSPERSAMPLE</samp>&#160;and 
 <samp class="codeph">OVERALL_VOL</samp> as shown in the following string:</p>
<p><samp class="codeph">-iter 1000,40,150</samp></p>
<p>To define <samp class="codeph">MSGSPERSAMPLE</samp> as 2000 and set 
 the <samp class="codeph">multiple_np</samp> policy, use the following 
 string (see <samp class="codeph">-iter_policy</samp>):</p>
<p><samp class="codeph">-iter 2000,multiple_np</samp></p>
<h2>-iter_policy Option</h2>
<p>Use this option to set a policy for automatic calculation of the number 
 of iterations. Use one of the following arguments to override the default 
 <samp class="codeph">ITER_POLICY</samp> value defined in <samp class="codeph">IMB_settings.h</samp>:</p>
<table width="100%">
	<col style="width: 17.279%;">
	<col style="width: 82.721%;">
	<tr>
		<th><p>Policy</p></th>
		<th><p>Description</p></th>
	</tr>
	<tr>
		<td><p><samp class="codeph">dynamic</samp></p></td>
		<td><p>Reduces the number of iterations when the maximum run time 
		 per sample (see <samp class="codeph">-time</samp>) is expected 
		 to be reached. Using this policy ensures faster execution, but 
		 may lead to inaccuracy of the results.</p></td>
	</tr>
	<tr>
		<td><p><samp class="codeph">multiple_np</samp></p></td>
		<td><p>Reduces the number of iterations when the message size is 
		 getting bigger. Using this policy ensures the accuracy of the 
		 results, but may lead to longer execution time. You can control 
		 the execution time through the <samp class="codeph">-time</samp> 
		 option.</p></td>
	</tr>
	<tr>
		<td><p><samp class="codeph">auto</samp></p></td>
		<td><p>Automatically chooses which policy to use:</p>
		<ul class="hcp1">
			<li>applies <samp class="codeph">multiple_np</samp> to collective 
			 operations where one of the processes acts as the root of 
			 the operation (for example, <samp class="codeph">MPI_Bcast</samp>)</li>
			<li>applies <samp class="codeph">dynamic</samp> to all other 
			 types of operations</li>
		</ul></td>
	</tr>
	<tr>
		<td><p><samp class="codeph">off</samp></p></td>
		<td><p>The number of iterations does not change during the execution.</p></td>
	</tr>
</table>
<p>You can also set the policy through the <samp class="codeph">-iter</samp> 
 option. See <samp class="codeph">-iter</samp>.</p>
<p>By default, the <samp class="codeph">ITER_POLICY</samp> defined in <samp 
	 class="codeph">IMB_settings.h</samp>&#160;is used.</p>
<h2>-time Option</h2>
<p>Specifies the number of seconds for the benchmark to run per message 
 size. The argument after <samp class="codeph">-time</samp> is a floating-point 
 number.</p>
<p>The combination of this flag with the <samp class="codeph">-iter</samp> 
 flag or its default alternative ensures that the Intel® MPI Benchmarks 
 always chooses the maximum number of repetitions that conform to all restrictions.</p>
<p>A rough number of repetitions per sample to fulfill the <samp class="codeph">-time</samp> 
 request is estimated in preparatory runs that use ~1 second overhead.</p>
<p>Default: <samp class="codeph">-time</samp> is activated. The floating-point 
 value specifying the run-time seconds per sample is set in the <samp class="codeph">SECS_PER_SAMPLE</samp> 
 variable defined in <samp class="codeph">IMB_settings.h</samp>, or <samp 
	 class="codeph">IMB_settings_io.h</samp>.</p>
<h2>-mem Option</h2>
<p>Specifies the number of GB to be allocated per process for the message 
 buffers. If the size is exceeded, a warning is returned, stating how much 
 memory is required for the overall run.</p>
<p>The argument after <samp class="codeph">-mem</samp> is a floating-point 
 number.</p>
<p>Default: the memory is restricted by <samp class="codeph">MAX_MEM_USAGE</samp> 
 defined in <samp class="codeph">IMB_mem_info.h</samp>.</p>
<h2>-input &lt;File&gt; Option</h2>
<p>Use the ASCII input file to select the benchmarks. For example, the 
 <samp class="codeph">IMB_SELECT_EXT</samp> file looks as follows:</p>
<pre>
#
# IMB benchmark selection file
#
# Every line must be a comment (beginning with #), or it
# must contain exactly one IMB benchmark name
#
#Window
Unidir_Get
#Unidir_Put
#Bidir_Get
#Bidir_Put
Accumulate</pre>
<p>With the help of this file, the following command runs only <samp class="codeph">Unidir_Get</samp> 
 and <samp class="codeph">Accumulate</samp> benchmarks of the <samp class="codeph">IMB-EXT</samp> 
 component:</p>
<pre>
mpirun .... IMB-EXT -input IMB_SELECT_EXT</pre>
<h2>-msglen &lt;File&gt; Option</h2>
<p>Enter any set of non-negative message lengths to an ASCII file, line 
 by line, and call the Intel® MPI Benchmarks with arguments:</p>
<p><samp class="codeph">-msglen Lengths</samp></p>
<p>The <samp class="codeph">Lengths</samp> value overrides the default 
 message lengths. For IMB-IO, the file defines the I/O portion lengths.</p>
<h2>-map PxQ Option</h2>
<p>Use this option to number the processes along rows of the matrix:</p>
<table width="600">
	<col style="width: 20%;">
	<col style="width: 20%;">
	<col style="width: 20%;">
	<col style="width: 20%;">
	<col style="width: 20%;">
	<tr>
		<td><p>0</p></td>
		<td><p>P</p></td>
		<td><p>...</p></td>
		<td><p>(Q-2)P</p></td>
		<td><p>(Q-1)P</p></td>
	</tr>
	<tr>
		<td><p>1</p></td>
		<td><p>&#160;</p></td>
		<td><p>&#160;</p></td>
		<td><p>&#160;</p></td>
		<td><p>&#160;</p></td>
	</tr>
	<tr>
		<td><p>...</p></td>
		<td><p>&#160;</p></td>
		<td><p>&#160;</p></td>
		<td><p>&#160;</p></td>
		<td><p>&#160;</p></td>
	</tr>
	<tr>
		<td><p>P-1</p></td>
		<td><p>2P-1</p></td>
		<td><p>&#160;</p></td>
		<td><p>(Q-1)P-1</p></td>
		<td><p>QP-1</p></td>
	</tr>
</table>
<p>For example, to run <samp class="codeph">Multi-PingPong</samp>between 
 two nodes of size P, with each process on one node communicating with 
 its counterpart on the other, call:</p>
<pre>
mpirun&#160;-np&#160;&lt;2P&gt;&#160;IMB-MPI1&#160;-map&#160;&lt;P&gt;x2&#160;PingPong</pre>
<h2>-include [[benchmark1] benchmark2 ...]</h2>
<p>Specifies the list of additional benchmarks to run. For example, to 
 add <samp class="codeph">PingPongSpecificSource</samp> and <samp class="codeph">PingPingSpecificSource</samp> 
 benchmarks, call:</p>
<pre>
mpirun&#160;-np&#160;2&#160;IMB-MPI1 -include&#160;PingPongSpecificSource&#160;PingPingSpecificSource</pre>
<h2>-exclude [[benchmark1] benchmark2 ...]</h2>
<p>Specifies the list of benchmarks to be excluded from the run. For example, 
 to exclude <samp class="codeph">Alltoall</samp> and <samp class="codeph">Allgather</samp>, 
 call:</p>
<pre>
mpirun&#160;-np&#160;2&#160;IMB-MPI1&#160;-exclude&#160;Alltoall&#160;Allgather</pre>
<h2>-msglog [&lt;minlog&gt;:]&lt;maxlog&gt;</h2>
<p>This option allows you to control the lengths of the transfer messages.&#160;This 
 setting overrides the <samp class="codeph">MINMSGLOG</samp> and <samp 
	 class="codeph">MAXMSGLOG</samp> values.&#160;The new message sizes 
 are <samp class="codeph">0,&#160;2^minlog,&#160;...,&#160;2^maxlog</samp>.</p>
<p>For example, if you run the following command line:</p>
<pre>
mpirun -np 2 IMB-MPI1 -msglog 3:7 PingPong</pre>
<p>Intel® MPI Benchmarks selects the lengths <samp class="codeph">0, 8, 
 16, 32, 64, 128</samp>, as shown below:</p>
<pre>
#---------------------------------------------------
# Benchmarking PingPong
# #processes =&#160;2
#---------------------------------------------------
&#160;&#160;&#160;&#160;&#160;&#160;&#160;#bytes #repetitions&#160;&#160;&#160;&#160;&#160;&#160;t[&#956;sec]&#160;&#160;&#160;Mbytes/sec
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.70&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.00
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;8&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.73&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10.46
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;16&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.74&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;20.65
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;32&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.94&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;32.61
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;64&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.94&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;65.14
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;128&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1.06&#160;&#160;&#160;&#160;&#160;&#160;&#160;115.16</pre>
<p>Alternatively, you can specify only the <samp class="codeph">maxlog</samp> 
 value, enter:</p>
<pre>
mpirun -np 2 IMB-MPI1 -msglog 3 PingPong</pre>
<p>In this case Intel® MPI Benchmarks selects the lengths <samp class="codeph">0,1,2,4,8</samp>:</p>
<pre>
#---------------------------------------------------
# Benchmarking PingPong
# #processes =&#160;2
#---------------------------------------------------
&#160;&#160;&#160;&#160;&#160;&#160;&#160;#bytes #repetitions&#160;&#160;&#160;&#160;&#160;&#160;t[&#956;sec]&#160;&#160;&#160;Mbytes/sec
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.69&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.00
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.72&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1.33
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.71&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2.69
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.72&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5.28
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;8&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.73&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10.47</pre>
<h2>-thread_level Option</h2>
<p>This option specifies the desired thread level for <samp class="codeph">MPI_Init_thread()</samp>.&#160;See 
 description of <samp class="codeph">MPI_Init_thread()</samp> for details. 
 The option is available only if the Intel® MPI Benchmarks is built with 
 the <samp class="codeph">USE_MPI_INIT_THREAD</samp> macro defined.&#160;Possible 
 values for <samp class="codeph">&lt;level&gt;</samp> are <samp class="codeph">single</samp>, 
 <samp class="codeph">funneled</samp>, <samp class="codeph">serialized</samp>, 
 and <samp class="codeph">multiple</samp>.</p>
<h2>-sync Option</h2>
<p>This option is relevant only for benchmarks measuring collective operations. 
 It controls whether all ranks are synchronized after every iteration step 
 by means of the <samp class="codeph">MPI_Barrier</samp> operation. The 
 <samp class="codeph">-sync</samp> option can take the following arguments:</p>
<table width="600">
	<col style="width: 40%;">
	<col style="width: 60%;">
	<tr>
		<th><p>Argument</p></th>
		<th><p>Description</p></th>
	</tr>
	<tr>
		<td><p class="codeph">0 | off | disable | no</p></td>
		<td><p>Disables processes synchronization at each iteration step.</p></td>
	</tr>
	<tr>
		<td><p class="codeph">1 | on | enable | yes</p></td>
		<td><p>Enables processes synchronization at each iteration step. 
		 This is the default value.</p></td>
	</tr>
</table>
<h2>-root_shift Option</h2>
<p>This options is relevant only for benchmarks measuring collective operations 
 that utilize the root concept (for example <samp class="codeph">MPI_Bcast</samp>, 
 <samp class="codeph">MPI_Reduce</samp>, <samp class="codeph">MPI_Gather</samp>, 
 etc). It defines whether the root is changed at every iteration step or 
 not. The <samp class="codeph">–root_shift</samp> option can take the following 
 arguments:</p>
<table width="600">
	<col style="width: 40%;">
	<col style="width: 60%;">
	<tr>
		<th><p>Argument</p></th>
		<th><p>Description</p></th>
	</tr>
	<tr>
		<td><p class="codeph">0 | off | disable | no</p></td>
		<td><p>Disables root change at each iteration step. Rank 0 acts 
		 as a root at each iteration step. This is the default value.</p></td>
	</tr>
	<tr>
		<td><p class="codeph">1 | on | enable | yes</p></td>
		<td><p>Enables root change at each iteration step. Root rank is 
		 changed in a round-robin fashion.</p></td>
	</tr>
</table>
</body>
</html>
